version: '3.1'

name: "ramlich"

services:
  zk:
    image: "confluentinc/cp-zookeeper:latest"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 32181
    ports:
      - 32181:32181
    extra_hosts:
      - "moby:127.0.0.1"

  kafka:
    image: "confluentinc/cp-kafka:latest"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
    expose:
      - 29092
      - 9092
    ports:
      - 29092:29092
      - 9092:9092
    depends_on:
      - zk
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - zk

  schema:
    image: "confluentinc/cp-schema-registry:latest"
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema
      SCHEMA_REGISTRY_LISTENERS: http://schema:28081
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 28081:28081
    links:
      - kafka
      - zk

  kafka-ui:
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "5m"
    image: provectuslabs/kafka-ui
    ports:
      - "8282:8080"
    restart: always

  postgresql:
    image: "postgres"
    volumes:
      - ./scripts/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"

  apiserver:
    image: ramlich:latest
    build:
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - kafka
      - schema
    links:
      - kafka
      - schema
    environment:
      RUST_BROKERS: host.docker.internal:29092
      KAFKA_ADVERTISED_HOST_NAME: kafka

  event_consumer:
    image: ramlich_consumer:latest
    build:
      dockerfile: consumer.Dockerfile
    depends_on:
      - kafka
      - schema
    links:
      - kafka
      - schema
    environment:
      RUST_BROKERS: host.docker.internal:29092
      KAFKA_ADVERTISED_HOST_NAME: kafka
